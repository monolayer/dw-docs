import{_ as e,c as d,a2 as o,o as r}from"./chunks/framework.8ycqjF2p.js";const f=JSON.parse('{"title":"Interface: BindMountType","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/interfaces/BindMountType.md","filePath":"reference/api/interfaces/BindMountType.md"}'),n={name:"reference/api/interfaces/BindMountType.md"};function a(i,t,c,s,p,u){return r(),d("div",null,t[0]||(t[0]=[o('<p><a href="./../globals.html">dw</a> / BindMountType</p><h1 id="interface-bindmounttype" tabindex="-1">Interface: BindMountType <a class="header-anchor" href="#interface-bindmounttype" aria-label="Permalink to &quot;Interface: BindMountType&quot;">​</a></h1><p>This mount type allows binding files or directories to the build container. A bind mount is read-only by default.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default value</th><th>Description</th></tr></thead><tbody><tr><td><code>from?</code></td><td><code>string</code></td><td><code>build context.</code></td><td>Build stage, context, or image name for the root of the source.</td></tr><tr><td><code>readwrite?</code></td><td><code>true</code></td><td><code>undefined</code></td><td>Allow writes on the mount. Written data will be discarded.</td></tr><tr><td><code>source?</code></td><td><code>string</code></td><td>root of from</td><td>Source path in the from.</td></tr><tr><td><code>target</code></td><td><code>string</code></td><td><code>undefined</code></td><td>Mount path.</td></tr><tr><td><code>type</code></td><td><code>&quot;bind&quot;</code></td><td><code>undefined</code></td><td>-</td></tr></tbody></table>',5)]))}const h=e(n,[["render",a]]);export{f as __pageData,h as default};

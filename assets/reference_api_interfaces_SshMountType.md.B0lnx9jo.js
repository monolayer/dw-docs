import{_ as e,c as d,a2 as o,o as r}from"./chunks/framework.8ycqjF2p.js";const f=JSON.parse('{"title":"Interface: SshMountType","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/interfaces/SshMountType.md","filePath":"reference/api/interfaces/SshMountType.md"}'),c={name:"reference/api/interfaces/SshMountType.md"};function a(s,t,n,i,h,p){return r(),d("div",null,t[0]||(t[0]=[o('<p><a href="./../globals.html">dw</a> / SshMountType</p><h1 id="interface-sshmounttype" tabindex="-1">Interface: SshMountType <a class="header-anchor" href="#interface-sshmounttype" aria-label="Permalink to &quot;Interface: SshMountType&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default value</th><th>Description</th></tr></thead><tbody><tr><td><code>gid?</code></td><td><code>string</code></td><td><code>0</code></td><td>Group ID for socket.</td></tr><tr><td><code>id?</code></td><td><code>string</code></td><td><code>default</code></td><td>ID of SSH agent socket or key.</td></tr><tr><td><code>mode?</code></td><td><code>string</code></td><td><code>0600</code></td><td>File mode for socket in octal.</td></tr><tr><td><code>required?</code></td><td><code>string</code></td><td><code>false.</code></td><td>If set to true, the instruction errors out when the key is unavailable.</td></tr><tr><td><code>target?</code></td><td><code>string</code></td><td><code>/run/buildkit/ssh_agent.${N}</code></td><td>SSH agent socket path.</td></tr><tr><td><code>type</code></td><td><code>&quot;ssh&quot;</code></td><td><code>undefined</code></td><td>-</td></tr><tr><td><code>uid?</code></td><td><code>string</code></td><td><code>0.</code></td><td>User ID for socket.</td></tr></tbody></table>',4)]))}const l=e(c,[["render",a]]);export{f as __pageData,l as default};

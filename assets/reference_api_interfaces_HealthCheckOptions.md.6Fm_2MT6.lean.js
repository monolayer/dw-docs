import{_ as t,c as r,a2 as d,o}from"./chunks/framework.8ycqjF2p.js";const f=JSON.parse('{"title":"Interface: HealthCheckOptions","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/interfaces/HealthCheckOptions.md","filePath":"reference/api/interfaces/HealthCheckOptions.md"}'),a={name:"reference/api/interfaces/HealthCheckOptions.md"};function c(i,e,n,s,h,l){return o(),r("div",null,e[0]||(e[0]=[d('<p><a href="./../globals.html">dw</a> / HealthCheckOptions</p><h1 id="interface-healthcheckoptions" tabindex="-1">Interface: HealthCheckOptions <a class="header-anchor" href="#interface-healthcheckoptions" aria-label="Permalink to &quot;Interface: HealthCheckOptions&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default value</th><th>Description</th></tr></thead><tbody><tr><td><code>interval?</code></td><td><code>string</code></td><td><code>30s</code></td><td>The health check will first run interval seconds after the container is started, and then again interval seconds after each previous check completes.</td></tr><tr><td><code>retries?</code></td><td><code>number</code></td><td><code>3</code></td><td>Consecutive failures of the health check for the container to be considered unhealthy.</td></tr><tr><td><code>startInterval?</code></td><td><code>string</code></td><td><code>5s</code></td><td>Time between health checks during the start period. <strong>Since</strong> Docker Engine v25.0</td></tr><tr><td><code>startPeriod?</code></td><td><code>string</code></td><td><code>0s</code></td><td>Provides initialization time for containers that need time to bootstrap. Probe failure during that period will not be counted towards the maximum number of retries. However, if a health check succeeds during the start period, the container is considered started and all consecutive failures will be counted towards the maximum number of retries.</td></tr><tr><td><code>timeout?</code></td><td><code>string</code></td><td><code>30s</code></td><td>Timeout in seconds after a single run of the check is considered to have failed.</td></tr></tbody></table>',4)]))}const u=t(a,[["render",c]]);export{f as __pageData,u as default};
